"""add_ai_analysis_fields_to_comments_and_indexes

Revision ID: cc382425fec6
Revises: 5e9c3e19649f
Create Date: 2025-06-02 18:19:34.571192

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Импортируем postgresql для JSONB

# revision identifiers, used by Alembic.
revision: str = 'cc382425fec6'
down_revision: Union[str, None] = '5e9c3e19649f' # Убедитесь, что это ID вашей предыдущей миграции
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands for adding new columns and indexes to 'comments' table ###
    op.add_column('comments', sa.Column('extracted_topics', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='AI: Извлеченные темы/сущности из комментария'))
    op.add_column('comments', sa.Column('extracted_problems', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='AI: Извлеченные проблемы/боли из комментария'))
    op.add_column('comments', sa.Column('extracted_questions', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='AI: Извлеченные вопросы из комментария'))
    op.add_column('comments', sa.Column('extracted_suggestions', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='AI: Извлеченные предложения/идеи из комментария'))
    op.add_column('comments', sa.Column('ai_analysis_completed_at', sa.DateTime(timezone=True), nullable=True, comment='AI: Время последнего анализа комментария'))
    
    # Создаем индексы для новых и измененных полей в 'comments'
    op.create_index(op.f('ix_comments_ai_analysis_completed_at'), 'comments', ['ai_analysis_completed_at'], unique=False)
    # Предполагаем, что индексы для commented_at и sentiment_label могли быть пропущены ранее, если они нужны
    # Если они уже есть, Alembic может выдать ошибку, тогда их можно будет удалить из этой миграции.
    # Чтобы проверить, можно закомментировать следующие две строки, применить миграцию,
    # а потом, если нужно, создать отдельную миграцию для добавления только индексов.
    # Но лучше, если Alembic сам их добавляет при автогенерации.
    # Сейчас мы добавляем их явно, так как автогенерация не сработала.
    op.create_index(op.f('ix_comments_commented_at'), 'comments', ['commented_at'], unique=False)
    op.create_index(op.f('ix_comments_sentiment_label'), 'comments', ['sentiment_label'], unique=False)
    
    # Изменяем nullable для 'comments.text_content'
    op.alter_column('comments', 'text_content',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_comment='Текст комментария', # Указываем существующий комментарий, если он был
               comment='Текст комментария (может быть null, если только медиа)') # Новый комментарий

    # ### commands for adding new index to 'posts' table ###
    # Предполагаем, что индекс для post_sentiment_label мог быть пропущен ранее
    op.create_index(op.f('ix_posts_post_sentiment_label'), 'posts', ['post_sentiment_label'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_posts_post_sentiment_label'), table_name='posts')
    
    op.alter_column('comments', 'text_content',
               existing_type=sa.TEXT(),
               nullable=False, # Возвращаем nullable=False
               existing_comment='Текст комментария (может быть null, если только медиа)',
               comment='Текст комментария')

    op.drop_index(op.f('ix_comments_sentiment_label'), table_name='comments')
    op.drop_index(op.f('ix_comments_commented_at'), table_name='comments')
    op.drop_index(op.f('ix_comments_ai_analysis_completed_at'), table_name='comments')
    op.drop_column('comments', 'ai_analysis_completed_at')
    op.drop_column('comments', 'extracted_suggestions')
    op.drop_column('comments', 'extracted_questions')
    op.drop_column('comments', 'extracted_problems')
    op.drop_column('comments', 'extracted_topics')
    # ### end Alembic commands ###