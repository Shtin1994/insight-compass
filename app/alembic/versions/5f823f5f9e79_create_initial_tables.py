"""create_initial_tables

Revision ID: 5f823f5f9e79
Revises: 
Create Date: 2025-05-24 11:14:12.901889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f823f5f9e79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('channels',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Telegram ID канала, используется как PK'),
    sa.Column('username', sa.String(length=255), nullable=True, comment='Username канала (e.g., @durov)'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Название канала'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание канала'),
    sa.Column('last_processed_post_id', sa.Integer(), nullable=True, comment='ID последнего обработанного поста Telegram из этого канала'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг, активен ли мониторинг'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_channels'))
    )
    op.create_index(op.f('ix_channels_id'), 'channels', ['id'], unique=False)
    op.create_index(op.f('ix_channels_username'), 'channels', ['username'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Внутренний автоинкрементный ID поста'),
    sa.Column('telegram_post_id', sa.Integer(), nullable=False, comment='ID поста в Telegram'),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('link', sa.String(length=512), nullable=False, comment='Ссылка на пост в Telegram'),
    sa.Column('text_content', sa.Text(), nullable=True, comment='Текстовое содержимое поста'),
    sa.Column('views_count', sa.Integer(), nullable=True, comment='Количество просмотров (если доступно)'),
    sa.Column('comments_count', sa.Integer(), nullable=False, comment='Количество комментариев к посту'),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=False, comment='Время публикации поста в Telegram'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Время добавления в нашу БД'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=True, comment='Суммаризация поста (AI)'),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], name=op.f('fk_posts_channel_id_channels'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_posts'))
    )
    op.create_index(op.f('ix_posts_channel_id'), 'posts', ['channel_id'], unique=False)
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_index(op.f('ix_posts_link'), 'posts', ['link'], unique=True)
    op.create_index(op.f('ix_posts_telegram_post_id'), 'posts', ['telegram_post_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Внутренний автоинкрементный ID комментария'),
    sa.Column('telegram_comment_id', sa.Integer(), nullable=False, comment='ID комментария в Telegram'),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('telegram_user_id', sa.BigInteger(), nullable=True, comment='Telegram ID пользователя'),
    sa.Column('user_username', sa.String(length=255), nullable=True, comment='Username пользователя'),
    sa.Column('user_fullname', sa.String(length=255), nullable=True, comment='Полное имя пользователя'),
    sa.Column('text_content', sa.Text(), nullable=False, comment='Текст комментария'),
    sa.Column('commented_at', sa.DateTime(timezone=True), nullable=False, comment='Время публикации комментария в Telegram'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Время добавления в нашу БД'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=True, comment='Оценка тональности (AI)'),
    sa.Column('sentiment_label', sa.String(length=50), nullable=True, comment='Метка тональности (AI)'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_comments_post_id_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_comments_telegram_comment_id'), 'comments', ['telegram_comment_id'], unique=False)
    op.create_index(op.f('ix_comments_telegram_user_id'), 'comments', ['telegram_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comments_telegram_user_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_telegram_comment_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_posts_telegram_post_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_link'), table_name='posts')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_channel_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_channels_username'), table_name='channels')
    op.drop_index(op.f('ix_channels_id'), table_name='channels')
    op.drop_table('channels')
    # ### end Alembic commands ###
