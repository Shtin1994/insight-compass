// frontend/src/components/NLQueryInterface.jsx
import React, { useState } from 'react';
import { postNLQueryAPI } from '../services/apiService';

const NLQueryInterface = () => {
  const [queryText, setQueryText] = useState('');
  const [aiAnswer, setAiAnswer] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  // --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ ---
  const [selectedDaysPeriod, setSelectedDaysPeriod] = useState(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - "–Ω–µ —É–∫–∞–∑–∞–Ω" / –∏–∑ —Ç–µ–∫—Å—Ç–∞
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

  const handleSubmitQuery = async (e) => {
    e.preventDefault();
    if (!queryText.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.');
      return;
    }

    setIsLoading(true);
    setError(null);
    setAiAnswer('');

    // --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ contextParams ---
    const contextParams = {};
    if (selectedDaysPeriod && selectedDaysPeriod !== '') {
      contextParams.days_period = parseInt(selectedDaysPeriod, 10);
    }
    // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

    try {
      // –ü–µ—Ä–µ–¥–∞–µ–º contextParams –≤ API
      const response = await postNLQueryAPI(queryText, contextParams); 
      if (response && response.ai_answer) {
        setAiAnswer(response.ai_answer);
      } else {
        setAiAnswer(response.error_message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –æ—Ç AI.'); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º error_message, –µ—Å–ª–∏ –µ—Å—Ç—å
      }
    } catch (err) {
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞.');
      setAiAnswer('');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-white p-6 shadow-lg rounded-xl mt-8">
      <h3 className="text-xl font-semibold text-gray-800 mb-4">üí¨ –°–ø—Ä–æ—Å–∏—Ç–µ –ò–Ω—Å–∞–π—Ç-–ö–æ–º–ø–∞—Å</h3>
      
      <form onSubmit={handleSubmitQuery} className="space-y-4">
        <div>
          <label htmlFor="nlQueryInput" className="block text-sm font-medium text-gray-700 mb-1">
            –í–∞—à –≤–æ–ø—Ä–æ—Å:
          </label>
          <textarea
            id="nlQueryInput"
            rows="3"
            className="w-full text-sm p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 shadow-sm"
            value={queryText}
            onChange={(e) => setQueryText(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –æ–±—Å—É–∂–¥–∞–ª–∏—Å—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π?"
            disabled={isLoading}
          />
        </div>

        {/* --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô: –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ --- */}
        <div>
          <label htmlFor="nlQueryDaysPeriod" className="block text-sm font-medium text-gray-700 mb-1">
            –ü–µ—Ä–∏–æ–¥ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
          </label>
          <select
            id="nlQueryDaysPeriod"
            value={selectedDaysPeriod}
            onChange={(e) => setSelectedDaysPeriod(e.target.value)}
            className="w-full sm:w-1/2 lg:w-1/3 text-sm p-2 border border-gray-300 rounded-md bg-white focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
            disabled={isLoading}
          >
            <option value="">–ò–∑ —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞ / –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</option>
            <option value="1">–ó–∞ 1 –¥–µ–Ω—å</option>
            <option value="7">–ó–∞ 7 –¥–Ω–µ–π</option>
            <option value="30">–ó–∞ 30 –¥–Ω–µ–π</option>
            <option value="90">–ó–∞ 90 –¥–Ω–µ–π</option>
            <option value="365">–ó–∞ –≥–æ–¥</option>
          </select>
          <p className="text-xs text-gray-500 mt-1">–ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω, —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (7 –¥–Ω–µ–π).</p>
        </div>
        {/* --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô --- */}
        
        <div>
          <button
            type="submit"
            className="w-full sm:w-auto inline-flex justify-center items-center px-6 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
            disabled={isLoading || !queryText.trim()}
          >
            {isLoading ? (
              <>
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                –û–±—Ä–∞–±–æ—Ç–∫–∞...
              </>
            ) : (
              '–°–ø—Ä–æ—Å–∏—Ç—å AI'
            )}
          </button>
        </div>
      </form>

      {error && (
        <div className="mt-4 p-3 bg-red-50 text-red-700 border border-red-200 rounded-md text-sm">
          <strong>–û—à–∏–±–∫–∞:</strong> {error}
        </div>
      )}

      {aiAnswer && !isLoading && !error && (
        <div className="mt-6 p-4 bg-gray-50 border border-gray-200 rounded-md">
          <h4 className="text-md font-semibold text-gray-700 mb-2">–û—Ç–≤–µ—Ç AI:</h4>
          <p className="text-sm text-gray-800 whitespace-pre-wrap">{aiAnswer}</p>
        </div>
      )}
    </div>
  );
};

export default NLQueryInterface;