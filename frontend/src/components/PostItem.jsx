// frontend/src/components/PostItem.jsx

import React from 'react';

const getSentimentEmoji = (label) => {
  if (!label) return '‚ùì';
  switch (label.toLowerCase()) {
    case 'positive': return 'üòä';
    case 'negative': return 'üò†';
    case 'neutral':  return 'üòê';
    case 'mixed':    return 'ü§î'; // –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç–∞–∫–∞—è –º–µ—Ç–∫–∞
    default:         return '‚ùì';
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
const formatDate = (dateString) => {
  if (!dateString) return 'N/A';
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: '2-digit', // –ò—Å–ø–æ–ª—å–∑—É–µ–º 2-–∑–Ω–∞—á–Ω—ã–π –≥–æ–¥ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
    });
  } catch (e) {
    console.error("Error formatting date:", dateString, e);
    return dateString; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É–º–º—ã —Ä–µ–∞–∫—Ü–∏–π
const getTotalReactions = (reactionsData) => {
  // –ï—Å–ª–∏ reactions_total_sum —É–∂–µ –µ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if (typeof reactionsData.reactions_total_sum === 'number') {
    return reactionsData.reactions_total_sum;
  }
  // –ò–Ω–∞—á–µ —Å—á–∏—Ç–∞–µ–º –∏–∑ –æ–±—ä–µ–∫—Ç–∞ reactions
  if (reactionsData.reactions && typeof reactionsData.reactions === 'object') {
    return Object.values(reactionsData.reactions).reduce((sum, count) => sum + (Number(count) || 0), 0);
  }
  return 0; // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ —Ç–æ–≥–æ, –Ω–∏ –¥—Ä—É–≥–æ–≥–æ
};


function PostItem({ post, onShowComments, onOpenPostModal }) {
  if (!post) {
    return null; // –õ—É—á—à–µ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –Ω–∏—á–µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ—Å—Ç–∞
  }

  const handleShowCommentsClick = () => {
    if (onShowComments) { // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ onShowComments –ø–µ—Ä–µ–¥–∞–Ω–∞
        onShowComments(post.id);
    }
  };

  const handleOpenPostClick = () => {
    if (onOpenPostModal) {
      onOpenPostModal(post);
    }
  };

  const displayText = post.text_content || post.caption_text || post.summary_text || "[–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞]";
  const previewText = displayText.substring(0, 70) + (displayText.length > 70 ? "..." : ""); // –£–º–µ–Ω—å—à–∏–ª –ø—Ä–µ–≤—å—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã

  const reactionsSum = getTotalReactions(post); // post –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å post.reactions_total_sum –∏–ª–∏ post.reactions

  // –§–æ—Ä–º–∏—Ä—É–µ–º title –¥–ª—è —è—á–µ–π–∫–∏ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
  let reactionsTitle = '';
  if (post.reactions && typeof post.reactions === 'object' && Object.keys(post.reactions).length > 0) {
    reactionsTitle = Object.entries(post.reactions)
      .map(([emoji, count]) => `${emoji}: ${count}`)
      .join(', ');
  } else if (typeof post.reactions_total_sum === 'number') {
    reactionsTitle = `–í—Å–µ–≥–æ: ${post.reactions_total_sum}`;
  }


  return (
    <tr className="post-item-row hover:bg-gray-50"> {/* –ü—Ä–∏–º–µ—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ */}
      <td style={{ padding: '8px', border: '1px solid #ddd', verticalAlign: 'top' }}>
        {post.channel?.title || 'N/A'}
        {post.channel?.username && <div style={{fontSize: '0.8em', color: '#555'}}>@{post.channel.username}</div>}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', verticalAlign: 'top', wordBreak: 'break-word' }} title={displayText}>
        {previewText}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', verticalAlign: 'top', whiteSpace: 'nowrap' }}>
        {formatDate(post.posted_at)}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }}>
        {post.comments_count ?? 0} {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º ?? 0 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è 0 –≤–º–µ—Å—Ç–æ N/A */}
      </td>
      {/* --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö --- */}
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }}>
        {post.views_count ?? 0}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }}>
        {post.forwards_count ?? 0}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }} title={reactionsTitle}>
        {reactionsSum}
      </td>
      {/* --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô --- */}
      <td style={{ padding: '8px', border: '1px solid #ddd', verticalAlign: 'top' }}>
        {getSentimentEmoji(post.post_sentiment_label)} 
        <span style={{marginLeft: '4px'}}>{post.post_sentiment_label ? (post.post_sentiment_label.charAt(0).toUpperCase() + post.post_sentiment_label.slice(1)) : 'N/A'}</span>
        {/* {post.post_sentiment_score ? ` (${post.post_sentiment_score.toFixed(2)})` : ''} // –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å score –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞ */}
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }}>
        <a href={post.link} target="_blank" rel="noopener noreferrer" title={post.link} style={{textDecoration: 'none'}}>
          üîó
        </a>
      </td>
      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'center', verticalAlign: 'top' }}>
        <button onClick={handleOpenPostClick} style={{ padding: '5px 8px', fontSize: '0.9em' }}>
          –û—Ç–∫—Ä—ã—Ç—å
        </button>
      </td>
      {/* –Ø —É–±—Ä–∞–ª –∫–Ω–æ–ø–∫—É "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏" –∏–∑ PostItem, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –¥—É–±–ª–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å—Ç–æ–ª–±—Ü–∞ "–ö–æ–º–º." –∏ –Ω–µ —è—Å–Ω–æ, –∫–∞–∫ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø—Ä—è–º–æ –∑–¥–µ—Å—å */}
      {/* –ï—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞, –µ–µ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å, –Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥—É–º–∞—Ç—å –µ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ */}
    </tr>
  );
}

export default PostItem;